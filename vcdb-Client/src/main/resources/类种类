curl文档
一.ddl命令
1.创建数据库
curl -X PUT "localhost:8080/myDataBase"
2.删除数据库
curl -X DELETE "localhost:8080/myDataBase"

2.创建表(SQL字段类型   char(1字节)  double(8字节) N*string(4字节) int(4字节) long(8字节) long long(16字节))
PUT    http://ip:端口/dbname/tab_name
{
"column_family":
   [
    {
        "cf_name": "列族名称 ",(必要)
 		"type": "类型",(必要)
		"min"：最小长度,(不必要)
		"max"：最大长度,(不必要)
		"unique":是否唯一,(不必要)
    },
    ......
   ]
}

curl -H "Content-Type: application/json" -X PUT -d\
 '{"column_family":[{"cf_name": "info ","type": 56,"min": 1,"max": 34,"unique":"true"}]}'\
 "localhost:8080/myDataBase/myTable"


3.修改表结构(更新)
POST http://ip:端口/dbname/tab_name/_alter
{
    "alter_cells":
        [
 	        {
 	         	//put时，cf_name必要，old-cf_name不必要
             	//delete时，cf_name不必要，old-cf_name必要
             	//update时，cf_name必要，old-cf_name必要
                "cf_name":"列族名称",
                "old-cf_name":"列族名称",
 			    "method":"put/delete/insert",
 			    "type": "类型",(必要)
                "min"：最小长度,(不必要)
                "max"：最大长度,(不必要)
                "unique":是否唯一,(不必要)
 			}
          .......
        ]
}



curl -H "Content-Type: application/json" -X POST -d\
 '{"alter_cells":[{"cf_name":"info","old_cf_name":"myName","method":"update"}]}'\
 "localhost:8080/myDataBase/myTable/_alter"



4.删除表

curl -X DELETE "localhost:8080/myDataBase/myTable"

二.dml命令

1.开启事务
POST     http://ip:端口/_open
{
   "explainValue(操作解释)":  "I want update some Info"）(必要)
}


curl -H "Content-Type: application/json" -X POST -d\
 '{"explainValue":  "I want update some Info"}'\
 "localhost:8080/_open"

2.关闭事务
POST     http://ip:端口/_close

curl -X POST "localhost:8080/_close"

3.版本合并

POST http://ip:端口/dbname/tab_name/_merge
{

   "Version_terms(条件)":
   [
        {
            "rowKey":"行建名"(必要)
            "version-from":"要合并版本"(必要)
            "version-to":"合并后版本"(必要)
        },
      .......
   ]
}


curl -H "Content-Type: application/json" -X POST -d\
 '{"Version_terms":[{"rowKey":"row1","version-from":0,"version-to":2}]}'\
 "localhost:8080/myDataBase/myTable/_merge"





4.提取某一版本到最新版本

POST http://ip:端口/dbname/tab_name/_use
{
    "rowKey":"行建名"(必要)
    "version":"版本"(必要)
}

curl -H "Content-Type: application/json" -X POST -d\
 '{"rowKey":"row1","version":0}}'\
 "localhost:8080/myDataBase/myTable/_use"


5.删除某一版本

POST http://ip:端口/dbname/tab_name/delete_version
{
    "rowKey":"行建名"(必要)
    "version":"版本"(必要)
}

curl -H "Content-Type: application/json" -X POST -d\
 '{"rowKey":"row1","version":0}}'\
 "localhost:8080/myDataBase/myTable/delete_version"

6.查看全部版本
post http://ip:端口/dbname/tab_name/_showVersion
{
    "rowKey":"行建名"(必要)
}

curl -H "Content-Type: application/json" -X POST -d\
 '{"rowKey":"row1"}}'\
 "localhost:8080/myDataBase/myTable/_showVersion"

7.基本查询流程
#语法
post http://ip:端口/dbname/tab_name/_search
{
    "limit":9(不必要)
    "cf_names":["rowKey","id","name","age",*](必要)
    "terms(条件)":
        [
            {
                "cf_name":"列族名称",(必要)
                "c_name":"StudentAge",(不必要)
                "max": "最大值",(不必要)
                "equivalence":"相等的值",(不必要)
                "min":"最小值",(不必要)
                "like": "模糊(%表示多个字符，_表示一个字符)"(不必要)
            },
            ......
        ]
    "orders":
    [
        {
            'cf_name':'xxx',
            'sort':'asc/desc'
        },
        ......
    ]
	"Aggregate(聚合)":
	    [
            {
            "function":avg/min/max/sum,(必要)
            c_name:"StudentAge",(必要)
            as:“xxx”(必要)
            },
        .....
        ]
}

curl -H "Content-Type: application/json" -X POST -d\
 '{"limit":9,"cf_names":["row1","info"],"terms":[{"cf_name":"info","min":1,"max": 99}],"orders":[{"cf_name":"info1","sort":"asc"}]}'\
 "localhost:8080/myDataBase/myTable/_search"

9.基本添加流程
#语法
Post http://ip:端口/dbname/tab_name/_insert
{
    "rowKey":"唯一标识",
    "values":
        [
            {
                "cf_name":"cf1",(必要)
                "c_name":"c1",(必要)
                "value":"xxx"(必要)
            },
        ]
}

curl -H "Content-Type: application/json" -X POST -d\
 '{"rowKey":"row1","values":[{"cf_name":"info","c_name":"myName","value":"n1"}]}'\
 "localhost:8080/myDataBase/myTable/_insert"


10.基本删除流程
post http://ip:端口/dbname/tab_name /_delete
{
    "cf_names":[rowKey,id,name,age，*](必要)
    "terms":
        [
            {
                "cf_name":"列族名称",(必要)
                "c_name":"StudentAge",(不必要)
                "max": "最大值",(不必要)
                "equivalence":"相等的值",(不必要)
                "min":"最小值",(不必要)
                "like": "模糊(%表示多个字符，_表示一个字符)"(不必要)
            },
           ......
        ]
}


11.基本跟新流程
POST  http://ip:端口/dbname/tab_name /_update
{
    "rowKey":"sss"
    "terms":
    [
        {
            "cf_name":"列族名称",(必要)
            "c_name":"StudentAge",(不必要)
            "max": "最大值",(不必要)
            "equivalence":"相等的值",(不必要)
            "min":"最小值",(不必要)
            "like": "模糊(%表示多个字符，_表示一个字符)"(不必要)
        },
       .......
    ]
    "values":
    [
        {
             "cf_name":"cf1",(必要)
             "c_name":"c1",(必要)
             "value":"xxx"(必要)
        },
         .....
    ]
}




12.多表查询
post http://ip:端口/dbname/tab_name /_mget
{
    "limit":9(不必要)
	"j_tables"：
        [
            {
                "tab_name":"t_name"，(必要)
                "method":inner/left/right/full(必要)
            },
            ......
        ]
   "cf_names":["rowKey","id",name,age，*](必要)
    "terms":
        [
            {
               "cf_name":"列族名称",(必要)
               "c_name":"StudentAge",(不必要)
               "max": "最大值",(不必要)
               "equivalence":"相等的值",(不必要)
               "min":"最小值",(不必要)
               "like": "模糊(%表示多个字符，_表示一个字符)"(不必要)
            },
                ......
        ]
        "orders":
            [
                {
                    'cf_name':'xxx',(必要)
                    'sort':'asc/desc'(必要)
                },
                ......
            ]
}
